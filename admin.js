<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ü—Ä—è–º–∞—è –ó–∞–≥—Ä—É–∑–∫–∞ –í–∏–¥–µ–æ –¥–ª—è CPM Bot</title>
    
    <script type="module">
        // –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-app.js";
        // –ò–º–ø–æ—Ä—Ç Storage SDK
        import { getStorage, ref, uploadBytesResumable, getDownloadURL } from "https://www.gstatic.com/firebasejs/10.12.5/firebase-storage.js";

        // === Firebase Config (CPM Project) ===
        const firebaseConfig = {
            apiKey: "AIzaSyCwl4hXA-UVi6gHSDwIxONFeOBoIMD7H5w",
            authDomain: "cpm-project1.firebaseapp.com",
            projectId: "cpm-project1",
            // üõë –§–ê–ö–¢–ò–ß–ï–°–ö–û–ï –ò–ú–Ø –ë–ê–ö–ï–¢–ê: cpm-project1.firebasestorage.app
            storageBucket: "cpm-project1.firebasestorage.app", 
            messagingSenderId: "1071894518061",
            appId: "1:1071894518061:web:9eb187d2f6101efe911ba4",
            measurementId: "G-SJWFD8DLGQ"
        };
        
        // === Init Firebase (–ê–Ω–æ–Ω–∏–º–Ω–æ) ===
        const app = initializeApp(firebaseConfig);
        const storage = getStorage(app); 
        
        // -------------------------------------------------------------
        // --- –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ ---
        // -------------------------------------------------------------
        
        document.addEventListener('DOMContentLoaded', () => {
            const fileInput = document.getElementById('fileInput');
            const uploadButton = document.getElementById('uploadButton');
            const statusDiv = document.getElementById('status');
            const urlOutput = document.getElementById('urlOutput');

            uploadButton.addEventListener('click', uploadFile);

            async function uploadFile() {
                const file = fileInput.files[0];

                if (!file) {
                    statusDiv.innerHTML = '<span style="color: red;">‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏.</span>';
                    return;
                }

                statusDiv.innerHTML = '‚è≥ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏...';
                uploadButton.disabled = true;
                urlOutput.style.display = 'none';

                // 1. –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è —Ñ–∞–π–ª–∞ (–ø–∞–ø–∫–∞: 'cpm_uploads')
                const uniqueId = Date.now();
                const fileExtension = file.name.split('.').pop();
                const storageRef = ref(storage, `cpm_uploads/${uniqueId}.${fileExtension}`);

                // 2. –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É 
                const uploadTask = uploadBytesResumable(storageRef, file);

                uploadTask.on('state_changed', 
                    (snapshot) => {
                        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                        statusDiv.innerHTML = `‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞: ${progress.toFixed(0)}%`;
                    }, 
                    (error) => {
                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
                        statusDiv.innerHTML = `<span style="color: red;">‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}</span>`;
                        uploadButton.disabled = false;
                        console.error("Upload error:", error);
                    }, 
                    async () => {
                        // 3. –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –ø–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
                        statusDiv.innerHTML = '<span style="color: green;">‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</span> –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏...';
                        try {
                            const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);
                            
                            // 4. –í—ã–≤–æ–¥–∏–º URL –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                            urlOutput.value = downloadURL;
                            urlOutput.style.display = 'block';
                            statusDiv.innerHTML = '<span style="color: green;">‚úÖ –£—Å–ø–µ—à–Ω–æ!</span> **–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–µ –≤ Telegram-–±–æ—Ç.**';
                            uploadButton.disabled = true;
                            
                        } catch (e) {
                            statusDiv.innerHTML = `<span style="color: red;">‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏: ${e.message}</span>`;
                            uploadButton.disabled = false;
                        }
                    }
                );
            }
        });
    </script>
    
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            min-height: 100vh;
            margin: 0;
            background-color: #f4f4f9;
            font-family: Arial, sans-serif;
            padding: 20px;
        }
        .container {
            width: 90%;
            max-width: 600px;
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        h1 {
            color: #4CAF50;
            font-size: 1.8em;
            margin-bottom: 20px;
        }
        input[type="file"] {
            display: block;
            margin: 20px auto;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 6px;
            width: 100%;
            max-width: 350px;
            box-sizing: border-box;
        }
        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s;
        }
        button:hover:not(:disabled) {
            background-color: #45a049;
        }
        button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        #status {
            margin-top: 20px;
            padding: 10px;
            border-radius: 6px;
            background-color: #e9e9f0;
            min-height: 40px;
            text-align: center;
            width: 100%;
            box-sizing: border-box;
        }
        #urlOutput {
            width: 100%;
            padding: 10px;
            margin-top: 15px;
            border: 1px solid #4CAF50;
            border-radius: 6px;
            background-color: #e8f5e9;
            font-family: monospace;
            cursor: pointer;
            text-align: left;
            resize: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>‚¨ÜÔ∏è –ü—Ä—è–º–∞—è –ó–∞–≥—Ä—É–∑–∫–∞ –í–∏–¥–µ–æ</h1>
        <p>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —Ñ–æ—Ä–º—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ ($ > 50 \text{ –ú–ë}$) –Ω–∞–ø—Ä—è–º—É—é –≤ Firebase Storage.</p>
        
        <input type="file" id="fileInput" accept="video/*">
        <button id="uploadButton">–ó–∞–≥—Ä—É–∑–∏—Ç—å –í–∏–¥–µ–æ</button>
        
        <div id="status">–û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞...</div>
        
        <textarea id="urlOutput" rows="3" readonly style="display: none;" 
                  onclick="this.select(); document.execCommand('copy'); alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');"></textarea>
    </div>
</body>
</html>
