(async function () {
  const tableBody = document.querySelector("#admin-table tbody");
  let data = [];

  // –ó–∞–≥—Ä—É–∂–∞–µ–º JSON
  async function loadData() {
    try {
      const res = await fetch("data/ipas.json?ts=" + Date.now());
      data = await res.json();
      render();
    } catch (e) {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON", e);
      tableBody.innerHTML = `<tr><td colspan="7">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å ipas.json</td></tr>`;
    }
  }

  // –†–µ–Ω–¥–µ—Ä —Ç–∞–±–ª–∏—Ü—ã
  function render() {
    tableBody.innerHTML = "";
    data.forEach((app, idx) => {
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td data-label="ID">${app.id}</td>
        <td data-label="Name">${app.name}</td>
        <td data-label="BundleId">${app.bundleId}</td>
        <td data-label="Version">${app.version}</td>
        <td data-label="minIOS">${app.minIOS}</td>
        <td data-label="Size">${app.sizeBytes}</td>
        <td data-label="Actions">
          <button class="btn small blue" onclick="editItem(${idx})">‚úèÔ∏è</button>
          <button class="btn small red" onclick="deleteItem(${idx})">üóë</button>
        </td>
      `;
      tableBody.appendChild(tr);
    });
  }

  // –°–∫–∞—á–∞—Ç—å JSON
  document.getElementById("download-btn").addEventListener("click", () => {
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: "application/json" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "ipas.json";
    a.click();
    URL.revokeObjectURL(url);
  });

  // –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π IPA
  document.getElementById("add-btn").addEventListener("click", () => {
    const id = prompt("ID:");
    const name = prompt("Name:");
    const bundleId = prompt("BundleId:");
    const version = prompt("Version:");
    const minIOS = prompt("minIOS:");
    const sizeBytes = prompt("Size (–±–∞–π—Ç—ã):");

    if (id && name) {
      data.push({ id, name, bundleId, version, minIOS, sizeBytes });
      render();
    }
  });

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  window.deleteItem = function (idx) {
    if (confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?")) {
      data.splice(idx, 1);
      render();
    }
  };

  window.editItem = function (idx) {
    const app = data[idx];
    app.name = prompt("Name:", app.name) || app.name;
    app.version = prompt("Version:", app.version) || app.version;
    render();
  };

  loadData();
})();
